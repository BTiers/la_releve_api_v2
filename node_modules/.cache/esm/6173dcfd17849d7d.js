let Express,BodyParser,UserRouter,ErrorHandler;_178‍.w("express",[["default",["Express"],function(v){Express=v}]]);_178‍.w("body-parser",[["default",["BodyParser"],function(v){BodyParser=v}]]);_178‍.w("./user.routes.js",[["default",["UserRouter"],function(v){UserRouter=v}]]);_178‍.w("./ErrorHandler.js",[["default",["ErrorHandler"],function(v){ErrorHandler=v}]]);





const app = Express();

app.use(BodyParser.json());
app.use(BodyParser.urlencoded({ extended: true }));

app.use('/api/v1/users', UserRouter);

app.use(async (err, _, res, next) => {
  const handler = new ErrorHandler();
  const isOperationalError = await handler.handleError(err);

  if (!isOperationalError) next(err);
  else res.status(err.httpCode).json(err.sanitize());
});

app.listen(3000, function() {
  console.log('Example app listening on port 3000!');
});
