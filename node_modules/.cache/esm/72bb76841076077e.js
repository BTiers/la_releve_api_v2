let Sequelize,DataTypes,Model,Database;_107‍.x([["default",()=>_107‍.o]]);_107‍.w("sequelize",[["default",["Sequelize"],function(v){Sequelize=v}],["DataTypes",["DataTypes"],function(v){DataTypes=v}],["Model",["Model"],function(v){Model=v}]]);_107‍.w("./config/database.js",[["default",["Database"],function(v){Database=v}]]);



class User extends Model {}

User.init(
  {
    id: {
      type: DataTypes.UUID,
      defaultValue: Sequelize.UUIDV4,
      allowNull: false,
      primaryKey: true,
    },
    first_name: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    last_name: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    email: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    phone: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    last_school: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    study_level: {
      type: DataTypes.STRING,
      allowNull: false,
    },
  },
  {
    sequelize: Database,
    modelName: 'User',
    timestamps: true,
    createdAt: 'created_at',
    updatedAt: 'updated_at',
  }
);

// Sanitizing phone_number from response
User.toResponse = () => {
  return {
    id: this.id,
    first_name: this.first_name,
    last_name: this.last_name,
    email: this.email,
    last_school: this.last_school,
    study_level: this.study_level,
  };
};

_107‍.d(User);
