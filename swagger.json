{
  "openapi": "3.0.0",
  "info": {
    "title": "Node API La releve",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "listUsers",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "showUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to show",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not retrieved because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "requestBody": {
          "description": "User new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "requestBody": {
          "description": "User new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "last_school": {
                    "type": "string"
                  },
                  "study_level": {
                    "type": "string"
                  }
                },
                "minProperties": 1
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "allOf": [
          {
            "required": [
              "first_name",
              "last_name",
              "email",
              "last_school",
              "study_level"
            ],
            "properties": {
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "last_school": {
                "type": "string"
              },
              "study_level": {
                "type": "string"
              }
            }
          },
          {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "NewUser": {
        "required": [
          "first_name",
          "last_name",
          "email",
          "phone",
          "last_school",
          "study_level"
        ],
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "last_school": {
            "type": "string"
          },
          "study_level": {
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "validation"
            ]
          },
          "httpCode": {
            "type": "string",
            "enum": [
              400
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "\"key\" is required"
              ]
            }
          }
        }
      },
      "ValidationErrorDetail": {
        "properties": {
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "NotFoundError": {
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "{ressource}_not_found"
            ]
          },
          "httpCode": {
            "type": "string",
            "enum": [
              400
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "{Ressource} with id {id} not found"
              ]
            }
          }
        }
      }
    }
  }
}